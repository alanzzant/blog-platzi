{"version":3,"sources":["assets/user.jpg","assets/logo.png","assets/portal.png","components/Users/Table/index.js","components/Loading/index.js","components/Fatal/index.js","types/usersTypes.js","actions/usersActions.js","components/Users/index.js","actions/postsActions.js","types/postsTypes.js","components/User/Post/index.js","components/User/Comments/index.js","components/User/index.js","components/Navbar/index.js","components/NotFound/index.js","actions/tasksActions.js","types/tasksTypes.js","components/Tasks/index.js","components/AddTask/index.js","components/App.js","reducers/usersReducer.js","reducers/postsReducer.js","reducers/tasksReducer.js","reducers/index.js","index.js"],"names":["module","exports","Table","props","className","users","map","user","key","name","email","website","to","Loading","Fatal","error","ERROR","getUsers","dispatch","a","type","axios","get","response","payload","data","message","Users","this","length","isLoading","Component","connect","usersReducer","usersActions","getPosts","getUserPosts","getState","posts","postsReducer","userId","id","newPosts","post","comments","isOpen","updatedPosts","postsKey","updatedUsers","togglePost","selectedKey","selectedPost","newPost","forEach","getComments","Post","onClick","handleClick","title","body","actions","areCommentsLoading","errorComments","Fragment","comment","User","match","params","src","userImage","alt","mapDispatchToProps","postsActions","Navbar","logo","NotFound","path","portal","getTasks","tasks","task","changeNewTask","newTask","addTask","editTask","editedTask","put","changeCompleted","taskId","tasksReducer","selectedTask","updatedTasks","completed","deleteTask","delete","Tasks","Object","keys","toggleUsertasks","checked","onChange","tasksActions","AddTask","handleChange","bind","handleSave","cleanTask","ev","target","getAttribute","value","redirect","disabled","App","exact","component","INITIAL_STATE","combineReducers","state","action","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6c55b567.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/user.6b21b7b9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.d27dc22a.png\";","module.exports = __webpack_public_path__ + \"static/media/portal.2601412a.png\";","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport './style.css'\r\n\r\nconst Table = props => (\r\n  <div className=\"Table\">\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Email</th>\r\n          <th>Website</th>\r\n          <th>View</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {props.users.map((user, key) => (\r\n          <tr key={key}>\r\n            <td>{user.name}</td>\r\n            <td>{user.email}</td>\r\n            <td>{user.website}</td>\r\n            <td><Link to={`/user/${key}`}><i className=\"profile icon\"></i></Link></td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n)\r\n\r\nexport default Table","import React from 'react'\r\n\r\nimport './style.css'\r\n\r\nconst Loading = () => (\r\n  <div className=\"lds-ripple\"><div></div><div></div></div>\r\n)\r\n\r\nexport default Loading","import React from 'react'\r\n\r\nimport './style.css'\r\n\r\nconst Fatal = props => (\r\n  <div className=\"Fatal\">\r\n    <h1>Oops! Something went wrong</h1>\r\n    <p>{props.error}</p>\r\n  </div>\r\n)\r\n\r\nexport default Fatal","export const GET_USERS = 'GET_USERS'\r\nexport const GET_USER = 'GET_USER'\r\nexport const LOADING = 'LOADING_USERS'\r\nexport const ERROR = 'ERROR_USERS'","import axios from 'axios'\r\n\r\nimport {GET_USERS, LOADING, ERROR} from '../types/usersTypes'\r\n\r\nexport const getUsers = () => async(dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: LOADING\r\n    })\r\n    \r\n    const response = await axios.get('https://jsonplaceholder.typicode.com/users')\r\n\r\n    dispatch({\r\n      type: GET_USERS,\r\n      payload: response.data\r\n    })\r\n  } catch(err) {\r\n    dispatch({\r\n      type: ERROR,\r\n      payload: err.message\r\n    })\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nimport Table from './Table'\r\nimport Loading from '../Loading'\r\nimport Fatal from '../Fatal'\r\n\r\nimport * as usersActions from '../../actions/usersActions'\r\n\r\nclass Users extends Component {\r\n  async componentDidMount() {\r\n    if(!this.props.users.length) {\r\n      await this.props.getUsers()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if(this.props.isLoading) return <Loading />\r\n    \r\n    if(this.props.error) return <Fatal error={this.props.error} />\r\n\r\n    return <Table users={this.props.users} />\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({usersReducer}) => usersReducer\r\n\r\nexport default connect(mapStateToProps, usersActions)(Users)\r\n","import axios from 'axios'\r\nimport {GET_POSTS, UPDATE_POSTS, LOADING, ERROR, LOADING_COMMENTS, ERROR_COMMENTS, UPDATE_COMMENTS} from '../types/postsTypes'\r\nimport * as usersTypes from '../types/usersTypes'\r\n\r\nexport const getPosts = () => async(dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: LOADING\r\n    })\r\n    \r\n    const response = await axios.get('https://jsonplaceholder.typicode.com/posts')\r\n\r\n    dispatch({\r\n      type: GET_POSTS,\r\n      payload: response.data\r\n    })\r\n  } catch(err) {\r\n    dispatch({\r\n      type: ERROR,\r\n      payload: err.message\r\n    })\r\n  }\r\n}\r\n\r\nexport const getUserPosts = (key) => async(dispatch, getState) => {\r\n  try {\r\n    const {users} = getState().usersReducer\r\n    const {posts} = getState().postsReducer\r\n    const userId = users[key].id\r\n\r\n    dispatch({\r\n      type: LOADING\r\n    })\r\n    \r\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/posts?userId=${userId}`)\r\n    \r\n    const newPosts = response.data.map(post => ({\r\n      ...post,\r\n      comments: [],\r\n      isOpen: false\r\n    }))\r\n\r\n    const updatedPosts = [\r\n      ...posts,\r\n      newPosts\r\n    ]\r\n    \r\n    dispatch({\r\n      type: UPDATE_POSTS,\r\n      payload: updatedPosts\r\n    })\r\n\r\n    const postsKey = updatedPosts.length - 1\r\n    const updatedUsers = [...users]\r\n    updatedUsers[key] = {\r\n      ...users[key],\r\n      postsKey\r\n    }\r\n\r\n    dispatch({\r\n      type: usersTypes.GET_USERS,\r\n      payload: updatedUsers\r\n    })\r\n  } catch(err) {\r\n    dispatch({\r\n      type: ERROR,\r\n      payload: err.message\r\n    })\r\n  }\r\n}\r\n\r\nexport const togglePost = (postsKey, selectedKey) => async(dispatch, getState) => {\r\n  const {posts} = getState().postsReducer\r\n  const selectedPost = posts[postsKey][selectedKey]\r\n\r\n  const newPost = {\r\n    ...selectedPost,\r\n    isOpen: true\r\n  }\r\n\r\n  const updatedPosts = [...posts]\r\n  updatedPosts[postsKey] = [\r\n    ...posts[postsKey]\r\n  ]\r\n\r\n  updatedPosts[postsKey].forEach(post => {\r\n    post.isOpen = false\r\n  })\r\n\r\n  updatedPosts[postsKey][selectedKey] = newPost\r\n\r\n  dispatch({\r\n    type: UPDATE_POSTS,\r\n    payload: updatedPosts\r\n  })\r\n}\r\n\r\nexport const getComments = (postsKey, selectedKey) => async(dispatch, getState) => {\r\n  try {\r\n    const {posts} = getState().postsReducer\r\n    const selectedPost = posts[postsKey][selectedKey]\r\n  \r\n    dispatch({\r\n      type: LOADING_COMMENTS\r\n    })\r\n\r\n    const response = await axios.get(`https://jsonplaceholder.typicode.com/comments?postId=${selectedPost.id}`)\r\n    const newPost = {\r\n      ...selectedPost,\r\n      comments: response.data\r\n    }\r\n  \r\n    const updatedPosts = [...posts]\r\n    updatedPosts[postsKey] = [\r\n      ...posts[postsKey]\r\n    ]\r\n  \r\n    updatedPosts[postsKey][selectedKey] = newPost\r\n  \r\n    dispatch({\r\n      type: UPDATE_COMMENTS,\r\n      payload: updatedPosts\r\n    })\r\n  } catch(err) {\r\n    dispatch({\r\n      type: ERROR_COMMENTS,\r\n      payload: 'Comments couldn\\'t be loaded.'\r\n    })\r\n  }\r\n}","export const GET_POSTS = 'GET_POSTS'\r\nexport const UPDATE_POSTS = 'UPDATE_POSTS'\r\nexport const LOADING = 'LOADING_POSTS'\r\nexport const ERROR = 'ERROR_POSTS'\r\nexport const LOADING_COMMENTS = 'LOADING_COMMENTS'\r\nexport const ERROR_COMMENTS = 'ERROR_COMMENTS'\r\nexport const UPDATE_COMMENTS = 'UPDATE_COMMENTS'","import React from 'react'\r\n\r\nimport './style.css'\r\n\r\nconst Post = props => (\r\n  <div className=\"Post\" onClick={props.handleClick}>\r\n    <h2>{props.post.title}</h2>\r\n    <p>{props.post.body}</p>\r\n  </div>\r\n)\r\n\r\nexport default Post","import React from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nimport Loading from '../../Loading'\r\nimport Fatal from '../../Fatal'\r\nimport * as actions from '../../../actions/postsActions'\r\n\r\nimport './style.css'\r\n\r\nconst Comments = props => {\r\n  const posts = props.posts[props.postsKey]\r\n\r\n  if(props.areCommentsLoading) return <Loading />\r\n  if(props.errorComments) return <Fatal error={props.errorComments} />\r\n\r\n  return(\r\n    <div className=\"Comments\">\r\n      <h1>comments</h1>\r\n\r\n      {\r\n        posts.map((post, selectedKey) => {\r\n          if(post.isOpen) {\r\n            if(!post.comments.length) {\r\n              props.getComments(props.postsKey, selectedKey)\r\n            } else {\r\n              return (\r\n                <React.Fragment key={props.postsKey}>\r\n                  <h1>to <b>{post.title}</b></h1>\r\n                  \r\n                  {\r\n                    post.comments.map(comment => (\r\n                      <div className=\"Comment\" key={comment.id}>\r\n                      <span>{comment.email}</span>\r\n                        <p>{comment.body}</p>\r\n                      </div>\r\n                    ))\r\n                  }\r\n                </React.Fragment>\r\n              )\r\n            }\r\n          }\r\n\r\n          return null\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({postsReducer}) => postsReducer\r\n\r\nexport default connect(mapStateToProps, actions)(Comments)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as usersActions from '../../actions/usersActions'\r\nimport * as postsActions from '../../actions/postsActions'\r\n\r\nimport Post from './Post'\r\nimport Comments from './Comments'\r\nimport Loading from '../Loading'\r\nimport Fatal from '../Fatal'\r\n\r\nimport userImage from '../../assets/user.jpg'\r\nimport './style.css'\r\n\r\nclass User extends Component {\r\n  async componentDidMount() {\r\n    const {\r\n      match: {params: {id}}\r\n    } = this.props\r\n\r\n    if(!this.props.usersReducer.users.length) {\r\n      await this.props.getUsers()\r\n    }\r\n\r\n    if(this.props.usersReducer.error) {\r\n      return null\r\n    }\r\n\r\n    if(!('postsKey' in this.props.usersReducer.users[id])) {\r\n      this.props.getUserPosts(id)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      usersReducer,\r\n      postsReducer,\r\n      match: {params: {id}}\r\n    } = this.props\r\n\r\n    if(usersReducer.error) {return <Fatal error={usersReducer.error}/>}\r\n    if(!usersReducer.users.length || usersReducer.isLoading) {return <Loading />}\r\n    \r\n    if(postsReducer.error) {return <Fatal error={postsReducer.error}/>}\r\n    if(postsReducer.isLoading) {return <Loading />}\r\n\r\n    const user = usersReducer.users[id]\r\n\r\n    if(!postsReducer.posts[user.postsKey]) return null\r\n\r\n    \r\n    const posts = postsReducer.posts[user.postsKey]\r\n\r\n    return(\r\n      <div className=\"User\">\r\n        <div className=\"User__info\">\r\n          <img src={userImage} alt=\"Yeah, a Rick mugshot\"/>\r\n          <h1>{user.name}</h1>\r\n          <span>{user.email}</span>\r\n        </div>\r\n        <div className=\"User__posts\">\r\n          <h1>posts</h1>\r\n\r\n          {\r\n            posts.map((post, selectedKey) => (\r\n              <Post\r\n                post={post}\r\n                key={post.id}\r\n                handleClick={() => this.props.togglePost(user.postsKey, selectedKey)}\r\n              />\r\n            ))\r\n          }\r\n        </div>\r\n        <Comments postsKey={user.postsKey}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({usersReducer, postsReducer}) => {\r\n  return {\r\n    usersReducer,\r\n    postsReducer\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  ...usersActions,\r\n  ...postsActions\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(User)","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport './style.css'\r\nimport logo from '../../assets/logo.png'\r\n\r\nconst Navbar = () => (\r\n  <nav className=\"Navbar\">\r\n    <img src={logo} alt=\"Platzi\"/>\r\n    <Link to='/users'>Users</Link>\r\n    <Link to='/tasks'>Tasks</Link>\r\n  </nav>\r\n)\r\n\r\nexport default Navbar","import React from 'react'\r\nimport {Link, Redirect} from 'react-router-dom'\r\n\r\nimport './style.css'\r\nimport portal from '../../assets/portal.png'\r\n\r\nconst NotFound = props => {\r\n  if(props.match.path === '/') return <Redirect to='/users' />\r\n\r\n  return(\r\n    <div className=\"NotFound\">\r\n      <h1>Oops! {props.error}</h1>\r\n      <p>You're lost, you might use your portal gun to go back</p>\r\n      <Link to=\"/\">\r\n        <div className=\"NotFound__portal\">\r\n          <img src={portal} alt=\"Portal\"/>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotFound","import axios from 'axios'\r\n\r\nimport {UPDATE_TASKS, SAVE_TASK, LOADING, ERROR, CHANGE_NEW_TASK} from '../types/tasksTypes'\r\n\r\nexport const getTasks = () => async(dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: LOADING\r\n    })\r\n    \r\n    const response = await axios.get('https://jsonplaceholder.typicode.com/todos')\r\n\r\n    const tasks = {}\r\n\r\n    response.data.forEach((task) => {\r\n      tasks[task.userId] = {\r\n        ...tasks[task.userId],\r\n        [task.id]: {\r\n          ...task\r\n        }\r\n      }\r\n    })\r\n\r\n    dispatch({\r\n      type: UPDATE_TASKS,\r\n      payload: tasks\r\n    })\r\n  } catch(err) {\r\n    dispatch({\r\n      type: ERROR,\r\n      payload: err.message\r\n    })\r\n  }\r\n}\r\n\r\nexport const changeNewTask = newTask => dispatch => {\r\n  dispatch({\r\n    type: CHANGE_NEW_TASK,\r\n    payload: newTask\r\n  })\r\n}\r\n\r\nexport const addTask = newTask => async(dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: LOADING\r\n    })\r\n\r\n    await axios.post('https://jsonplaceholder.typicode.com/todos', newTask)\r\n\r\n    dispatch({\r\n      type: SAVE_TASK\r\n    })\r\n  } catch(err) {\r\n    dispatch({\r\n      type: ERROR,\r\n      payload: err\r\n    })\r\n  }\r\n}\r\n\r\nexport const editTask = editedTask => async(dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: LOADING\r\n    })\r\n\r\n    await axios.put(`https://jsonplaceholder.typicode.com/todos/${editedTask.id}`, editedTask)\r\n\r\n    dispatch({\r\n      type: SAVE_TASK\r\n    })\r\n  } catch(err) {\r\n    dispatch({\r\n      type: ERROR,\r\n      payload: err\r\n    })\r\n  }\r\n}\r\n\r\nexport const changeCompleted = (userId, taskId) => (dispatch, getState) => {\r\n  const {tasks} = getState().tasksReducer\r\n  const selectedTask = tasks[userId][taskId]\r\n\r\n  const updatedTasks = {\r\n    ...tasks\r\n  }\r\n\r\n  updatedTasks[userId] = {\r\n    ...tasks[userId]\r\n  }\r\n\r\n  updatedTasks[userId][taskId] = {\r\n    ...tasks[userId][taskId],\r\n    completed: !selectedTask.completed\r\n  }\r\n\r\n  dispatch({\r\n    type: UPDATE_TASKS,\r\n    payload: updatedTasks\r\n  })\r\n}\r\n\r\nexport const deleteTask = taskId => async(dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: LOADING\r\n    })\r\n\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/todos/${taskId}`)\r\n\r\n    dispatch({\r\n      type: UPDATE_TASKS,\r\n      payload: {}\r\n    })\r\n  } catch(err) {\r\n    dispatch({\r\n      type: ERROR,\r\n      payload: err\r\n    })\r\n  }\r\n}","export const UPDATE_TASKS = 'UPDATE_TASKS'\r\nexport const SAVE_TASK = 'SAVE_TASK'\r\nexport const LOADING = 'LOADING_TASKS'\r\nexport const ERROR = 'ERROR_TASKS'\r\nexport const CHANGE_NEW_TASK = 'CHANGE_NEW_TASK'","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport Loading from '../Loading'\r\nimport Fatal from '../Fatal'\r\n\r\nimport './style.css'\r\nimport * as tasksActions from '../../actions/tasksActions'\r\n\r\nclass Tasks extends Component {\r\n  async componentDidMount() {\r\n    if(!Object.keys(this.props.tasks).length) {\r\n      await this.props.getTasks()\r\n    }\r\n  }\r\n\r\n  async componentDidUpdate() {\r\n    if(!Object.keys(this.props.tasks).length && !this.props.isLoading) {\r\n      await this.props.getTasks()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if(this.props.isLoading) return <Loading />\r\n    if(this.props.error) return <Fatal error={this.props.error} />\r\n\r\n    return(\r\n      <div className=\"Tasks\">\r\n        {\r\n          Object.keys(this.props.tasks).map(userId => (\r\n            <div className=\"Tasks__user\" key={userId}>\r\n              <h2 onClick={() => {this.props.toggleUsertasks(userId)}}>User {userId}</h2>\r\n\r\n              <div className=\"User__tasks\">\r\n                {\r\n                  Object.keys(this.props.tasks[userId]).map(taskId => (\r\n                    <div className=\"Task\" key={taskId}>\r\n                      <button className=\"btn__option delete\" onClick={() => {this.props.deleteTask(taskId)}}>✂</button>\r\n                      <Link to={`/tasks/edit/${userId}/${taskId}`} className=\"btn__option edit\">\r\n                        ✎\r\n                      </Link>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={this.props.tasks[userId][taskId].completed}\r\n                        onChange={() => {this.props.changeCompleted(userId, taskId)}}\r\n                        className=\"checkbox\"\r\n                        />\r\n                      {\r\n                        this.props.tasks[userId][taskId].title\r\n                      }\r\n                    </div>\r\n                  ))\r\n                }\r\n              </div>\r\n              <Link to={`/tasks/add/${userId}`} className=\"btn\">\r\n                Add task\r\n              </Link>\r\n            </div>\r\n          ))\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({tasksReducer}) => tasksReducer\r\n\r\nexport default connect(mapStateToProps, tasksActions)(Tasks)","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nimport Loading from '../Loading'\r\nimport Fatal from '../Fatal'\r\n\r\nimport * as tasksActions from '../../actions/tasksActions'\r\n\r\nclass AddTask extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.handleSave = this.handleSave.bind(this)\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {params: {userId, taskId}}\r\n    } = this.props\r\n\r\n    if(userId && taskId) {\r\n      const task = this.props.tasks[userId][taskId]\r\n      this.props.changeNewTask(task)\r\n    } else {\r\n      const cleanTask = {\r\n        title: '',\r\n        completed: false\r\n      }\r\n\r\n      this.props.changeNewTask(cleanTask)\r\n    }\r\n  }\r\n  \r\n  handleSave() {\r\n    const {\r\n      match: {params: {userId, taskId}}\r\n    } = this.props\r\n    \r\n    let newTask = {\r\n      userId: this.props.match.params.userId,\r\n      ...this.props.newTask\r\n    }\r\n\r\n    if(userId && taskId) {\r\n      newTask = {\r\n        ...newTask,\r\n        id: taskId\r\n      }\r\n\r\n      this.props.editTask(newTask)\r\n    } else {\r\n      this.props.addTask(newTask)\r\n    }\r\n\r\n\r\n  }\r\n  \r\n  handleChange(ev) {\r\n    const type = ev.target.getAttribute('type')\r\n    const newTask = {\r\n      title: this.props.newTask.title,\r\n      completed: this.props.newTask.completed\r\n    }\r\n\r\n    if(type === 'text') {\r\n      newTask.title = ev.target.value\r\n    } else if(type === 'checkbox') {\r\n      newTask.completed = ev.target.checked\r\n    }\r\n\r\n    this.props.changeNewTask(newTask);\r\n  }\r\n  \r\n  render() {\r\n    const {\r\n      match: {params: {userId, taskId}},\r\n      newTask,\r\n    } = this.props\r\n\r\n    if(this.props.isLoading) return <Loading />\r\n    if(this.props.error) return <Fatal error={this.props.error} />\r\n    if(this.props.redirect) return <Redirect to='/tasks' />\r\n\r\n    return(\r\n      <div className=\"AddTask\">\r\n        <h1>\r\n          {\r\n            (userId && taskId) ? `Update task` : `New task to user ${userId}`\r\n          }\r\n        </h1>\r\n        <br/>\r\n        <div className=\"form-group\">\r\n          task: <input type=\"text\" value={newTask.title} onChange={this.handleChange}/>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          completed: <input type=\"checkbox\" checked={newTask.completed} className=\"checkbox\" onChange={this.handleChange}/>\r\n        </div>\r\n        <br/>\r\n        {\r\n          (userId && taskId) ?\r\n            <button\r\n              disabled={newTask.title === this.props.tasks[userId][taskId].title && newTask.completed === this.props.tasks[userId][taskId].completed}\r\n              className=\"btn big\"\r\n              onClick={this.handleSave}>Save</button>\r\n          :\r\n            <button\r\n              disabled={!newTask.title}\r\n              className=\"btn big\"\r\n              onClick={this.handleSave}>Save</button>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({tasksReducer}) => tasksReducer\r\n\r\nexport default connect(mapStateToProps, tasksActions)(AddTask)","import React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\n\nimport Users from './Users'\nimport User from './User'\nimport Navbar from './Navbar'\nimport NotFound from './NotFound'\nimport Tasks from './Tasks'\nimport AddTask from './AddTask'\n\nconst App = () => (\n  <BrowserRouter>\n    <Navbar />\n    <div className=\"Layout\">\n      <Switch>\n        <Route exact path='/users' component={Users}/>\n        <Route exact path='/tasks' component={Tasks} />\n        <Route exact path='/user/:id' component={User} />\n        <Route exact path='/tasks/add/:userId' component={AddTask} />\n        <Route exact path='/tasks/edit/:userId/:taskId' component={AddTask} />\n        <Route component={NotFound} />\n      </Switch>\n    </div>\n  </BrowserRouter>\n)\n\nexport default App","import {GET_USERS, LOADING, ERROR} from '../types/usersTypes'\r\n\r\nconst INITIAL_STATE = {\r\n  users: [],\r\n  isLoading: false,\r\n  error: null\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch(action.type) {\r\n    case GET_USERS:\r\n      return {...state, users: action.payload, isLoading: false, error: null}\r\n    case LOADING:\r\n      return {...state, isLoading: true}\r\n    case ERROR:\r\n      return {...state, error: action.payload, isLoading: false}\r\n    default:\r\n      return state\r\n  }\r\n}","import {GET_POSTS, UPDATE_POSTS, LOADING, ERROR, LOADING_COMMENTS, ERROR_COMMENTS, UPDATE_COMMENTS} from '../types/postsTypes'\r\n\r\nconst INITIAL_STATE = {\r\n  posts: [],\r\n  isLoading: false,\r\n  error: null,\r\n  areCommentsLoading: false,\r\n  errorComments: null\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch(action.type) {\r\n    case GET_POSTS:\r\n      return {...state, posts: action.payload, isLoading: false, error: null}\r\n    case UPDATE_POSTS:\r\n      return {...state, posts: action.payload, isLoading: false, error: null}\r\n    case LOADING:\r\n      return {...state, isLoading: true}\r\n    case ERROR:\r\n      return {...state, error: action.payload, isLoading: false}\r\n    case LOADING_COMMENTS:\r\n      return {...state, areCommentsLoading: true}\r\n    case ERROR_COMMENTS:\r\n      return {...state, errorComments: action.payload, areCommentsLoading: false}\r\n    case UPDATE_COMMENTS:\r\n      return {...state, posts: action.payload, areCommentsLoading: false, errorComments: null}\r\n    default:\r\n      return state\r\n  }\r\n}","import {UPDATE_TASKS, SAVE_TASK, LOADING, ERROR, CHANGE_NEW_TASK} from '../types/tasksTypes'\r\n\r\nconst INITIAL_STATE = {\r\n  tasks: {},\r\n  isLoading: false,\r\n  error: null,\r\n  redirect: false,\r\n  newTask: {\r\n    title: '',\r\n    completed: false\r\n  }\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch(action.type) {\r\n    case UPDATE_TASKS:\r\n      return {...state, tasks: action.payload, isLoading: false, error: null, redirect: false, newTask: {title: '', completed: false}}\r\n    case LOADING:\r\n      return {...state, isLoading: true}\r\n    case ERROR:\r\n      return {...state, error: action.payload, isLoading: false}\r\n    case CHANGE_NEW_TASK:\r\n      return {...state, newTask: {...action.payload}}\r\n    case SAVE_TASK:\r\n      return {...state, tasks: {}, isLoading: false, error: null, redirect: true}\r\n    default:\r\n      return state\r\n  }\r\n}","import {combineReducers} from 'redux'\r\n\r\nimport usersReducer from './usersReducer'\r\nimport postsReducer from './postsReducer'\r\nimport tasksReducer from './tasksReducer'\r\n\r\nexport default combineReducers({\r\n  usersReducer,\r\n  postsReducer,\r\n  tasksReducer\r\n})","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport reduxThunk from 'redux-thunk'\n\nimport App from './components/App'\n\nimport './global.css'\nimport reducers from './reducers'\n\nconst store = createStore(\n  reducers, // Reducers\n  {\n    // Initial state\n  },\n  applyMiddleware(reduxThunk)\n)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}